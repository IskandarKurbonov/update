name: Update license

on:
  workflow_dispatch:
#  push:

jobs:
  prepare:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
            repo: ["document-server-integration", "web-apps", "DocSpace-buildtools"]
            # name: "Update license in document-server-integration"

          # - repo: "web-apps"
          #   name: "Update license in web-apps"

          # - repo: "DocSpace-buildtools"
          #   name: "Update license in DocSpace-buildtools"

    steps:
      - name: Checkout update directory
        uses: actions/checkout@v4
        with:
          repository: 'IskandarKurbonov/update'
          path: 'update'
          ref: feature/some-fix

      - name: Checkout ${{matrix.repo}}
        uses: actions/checkout@v4
        with:
          repository: 'IskandarKurbonov/${{matrix.repo}}'
          path: '${{matrix.repo}}'
          ref: master
          token: '${{ secrets.TOKEN }}'

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install reuse
        run: |
          pip3 install reuse lint jinja2

      - name: make matrix
        id: folder
        run: |
          FOLDERS=()
          for d in $(ls -d */); do
              folder=$(basename ${d})
              if [[ $folder != "update" ]]; then
                  FOLDERS+=("$folder")
              fi
          done

          echo "Folders for updating the license are: "
          echo "${FOLDERS[@]}"

          # Set new matrix for build job
          echo "folder=$(jq -c -n '$ARGS.positional' --args "${FOLDERS[@]}")" >> "$GITHUB_OUTPUT"
# #
#   update-license:
#     name: "Update license in: ${{ matrix.folder }}"
#     runs-on: ubuntu-latest
#     env:
#       FOLDER: ${{ matrix.folder }}
#     needs: [prepare]
#     strategy:
#       fail-fast: false
#       matrix: 
#         folder: ${{ fromJSON(needs.prepare.outputs.folder) }}
#     steps:
#       - name: Checkout update directory
#         uses: actions/checkout@v4
#         with:
#           repository: 'IskandarKurbonov/update'
#           path: 'update'
#           ref: feature/some-fix

#       - name: Checkout ${{matrix.folder}}
#         uses: actions/checkout@v4
#         with:
#           repository: 'IskandarKurbonov/${{matrix.folder}}'
#           path: '${{matrix.folder}}'
#           ref: master
#           token: '${{ secrets.TOKEN }}'

#       - name: Set up Python 3.
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.x'

#       - name: Install reuse
#         run: |
#           pip3 install reuse lint jinja2

#       - name: Build plugin
#         run: |
#           cd ./update
#           export REPO=${{matrix.folder}}
#           ./update.sh

#       - name: extract plugins.zip
#         run: |
#           mkdir -p ./artifacts/${FOLDER}
#           unzip ./${FOLDER}/dist/plugin.zip -d ./artifacts/${FOLDER}
      
#       - name: Archive plugins artifacts separate
#         uses: actions/upload-artifact@v4
#         with:
#           name: ${{ env.FOLDER }}
#           path: |
#             ./artifacts/${{ env.FOLDER }}